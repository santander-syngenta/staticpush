with TrialList as (select distinct trial_id from public.mio150_trial_fact_cp where trial_id ='USNB0H1232021') select case when Level_0.project_id is null then Level_0.protocol_id else Level_0.project_id end as Master_Prt, case when Level_0.protocol_id is null then Level_0.project_id else Level_0.protocol_id end as Derived_Prt, Level_0.trial_id as Trial, Level_0.trial_year as Trial_Year, Level_0.country_code as Country_Code, Level_0.state_prov_code as State_province_code, Level_0.state_prov as State_province_name, Level_0.city as City, Level_0.site_type as Site_Type, Level_0.investigator as Syngenta_FieldScientist, Level_0.trial_origin as Trial_Placement, Level_0.latitude as Latitude, Level_0.longitude as Longitude, Level_0.cooperator as Cooperator, Level_0.study_design_code as Exp_Design, null as Quality, Level_0.trial_status as Trial_Status, null as Assmt_Num, null as Last_Assessment_Flag, Level_2.plant_dates as Plant_Date, Level_3.Assmt_Date, Level_2.emerge_dates as Emergence_Date, null as First_Appl_Date_Trt, null as First_Appl_Date_Trial, null as Most_Recent_Appl_Date_Trt, null as Most_Recent_Appl_Date_Trial, case when Level_2.plant_dates not like '%,%' then Level_3.Assmt_Date - to_date(Level_2.plant_dates, 'YYYY-MM-DD') else null end as DAP, case when Level_2.emerge_dates not like '%,%' then Level_3.Assmt_Date - to_date(Level_2.plant_dates, 'YYYY-MM-DD') else null end as DAE, null as DAF_Appl_Trial, null as DAMR_Appl_Trial, null as DAF_Appl_Trt, null as DAMR_Appl_Trt, null as Crop_Code, Level_2.crop_common_names as Crop, Level_2.variety_names as Variety, null as Crop_Attributes, null as Crop_Stg_Min, null as Crop_Stg_Max, null as Pest_Code, null as Pest, null as Pest_Attributes, null as Pest_Stg_Min, null as Pest_Stg_Max, Level_3.Assmt_Type, null as Part_Rated, null as Part_Rated_Role, null as Unit_Reporting_Basis, null as ConTrt, Level_1.treatment_number as Trt_Num, Level_1.Product_Names, Level_1.Product_Rate_Unit, Level_1.App_Schedule, Level_1.Application_Dates, Level_1.Application_Description, Level_1.Method, Level_1.Placement, Level_1.Timing, Level_1.Spray_Volume, Level_1.Trt_Flag, Level_1.FactorsAndLevels, null as FactorA, null as FactorA_Level_Desc, null as FactorB, null as FactorB_Level_Desc, null as FactorC, null as FactorC_Level_Desc, Level_1.MITF_Code, Level_1.MITF_Level, Level_2.plot_number as Plot_ID, Level_2.plot_block_number as Range, Level_2.plot_col_number as Row, Level_2.repetition_number as Rep_Num, case when Level_3.Plot_Type = 'CHK' then 'Paired Check' else Level_1.Trt_Label end as Trt_Label, null as SE_Name, Level_3.Assmt_Label, Level_3.Rep_Value, null as Check_Mean_Value, null as Trt_Mean_Value, null as Check_PCT, Level_0.climate_zone_code as Climate_Zone_Code, Level_0.climate_zone_decode as Climate_Zone_Decode, Level_0.Trial_TrialDesignType, Level_0.Forced_Single_Factor, null as artificial_population, null as ComponentIndividualAIRateAndUnit, null as ComponentRateAndUnit, Level_3.sub_Values, Level_3.sub_Nums, CHR(39)|| Level_3.sub_RowCol  as sub_RowCol from TrialList inner join (select distinct project_id,protocol_id,m150_0.trial_id,trial_year,country_code,state_prov_code,state_prov,city,site_type,investigator,trial_origin,latitude,longitude,cooperator,study_design_code, null as Quality, trial_status,climate_zone_code,climate_zone_decode, null as Trial_TrialDesignType, null as Forced_Single_Factor from TrialList inner join public.mio150_trial_fact_cp m150_0 on TrialList.trial_id = m150_0.trial_id ) as Level_0 on TrialList.trial_id = Level_0.trial_id inner join (select distinct m150_1.trial_id, m150_1.treatment_number, case when strpos(',' || untreated_list  || ',',',' || m150_1.treatment_number || ',') > 0 then 'Primary Check'else case when m150_1.treatment_number = reference_treatment then 'Standard'else '' end end as Trt_Flag, MTFlist.MITF_Code, MTFlist.MITF_Level, Prdlist.PrdFlat as Product_Names, Prdlist.RateFlat as Product_Rate_Unit, Prdlist.AppCodeFlat as App_Schedule, Prdlist.MAFFlat as Application_Description, Prdlist.AppDatesFlat as Application_Dates, Prdlist.MethodFlat as Method, Prdlist.PlacementFlat as Placement, Prdlist.TimingFlat as Timing, Prdlist.SprVol as Spray_Volume, Factorlist.FactorsAndLevels, case when len(m150_1.treatment_number) = 3 then cast(m150_1.treatment_number as nvarchar) when len(m150_1.treatment_number) = 2 then '0' || cast(m150_1.treatment_number as nvarchar) when len(m150_1.treatment_number) = 1 then '00' || cast(m150_1.treatment_number as nvarchar)  else cast(m150_1.treatment_number as nvarchar) end || ' ' || case when MTFlist.MITF_Code is not null then 'MTF:{' || MTFlist.MITF_Code || '} ' else '' end || case when Prdlist.PrdFlat is not null then  Prdlist.PrdFlat || ' ' else '' end || case when Prdlist.RateFlat is not null then '{' || Prdlist.RateFlat|| '} ' else '' end || case when Prdlist.AppCodeFlat is not null then 'MAF:{' || Prdlist.AppCodeFlat || '} ' else '' end || case when Prdlist.MethodFlat is not null then 'MAF:{' || Prdlist.MethodFlat || '} ' else '' end || case when Prdlist.PlacementFlat is not null then 'MAF:{' || Prdlist.PlacementFlat || '} ' else '' end || case when Prdlist.TimingFlat is not null then 'MAF:{' || Prdlist.TimingFlat || '} ' else '' end || case when Prdlist.MAFFlat is not null then '{' || Prdlist.MAFFlat || '} ' else '' end as Trt_Label from TrialList inner join public.mio150_trial_fact_cp m150_1 on TrialList.trial_id = m150_1.trial_id left outer join (select m150_1a.trial_id, treatment_number, left(treatment_name, strpos(treatment_name, ':' )-1) as MITF_Code, right(treatment_name, len(treatment_name)-strpos(treatment_name, ':' )-1) as MITF_Level from TrialList inner join public.mio150_trial_fact_cp m150_1a on TrialList.trial_id = m150_1a.trial_id where record_type = 'application_product'and product_type = 'MTF') as MTFlist on m150_1.trial_id = MTFlist.trial_id and m150_1.treatment_number = MTFlist.treatment_number left outer join (select TagPrd.trial_id, TagPrd.treatment_number, listagg(TagPrd.trt_application_code, '; ') within group (order by TagPrd.trt_application_code) as AppCodeFlat, listagg(PrdsInTAG, '; ') within group (order by TagPrd.trt_application_code) as PrdFlat, listagg(RatesInTAG, '; ') within group (order by TagPrd.trt_application_code) as RateFlat, listagg(AppDates, '; ') within group (order by TagPrd.trt_application_code) as AppDatesFlat, listagg(AppMethod, '; ') within group (order by TagPrd.trt_application_code) as MethodFlat, listagg(AppPlacement, '; ') within group (order by TagPrd.trt_application_code) as PlacementFlat, listagg(AppTiming, '; ') within group (order by TagPrd.trt_application_code) as TimingFlat, listagg(SprVol, '; ') within group (order by TagPrd.trt_application_code) as SprVol, listagg(MAFInTAG, '; ') within group (order by TagPrd.trt_application_code) as MAFFlat from (select trial_id, treatment_number, trt_application_code, listagg(treatment_name, ' + ') within group (order by treatment_name) as PrdsInTAG, listagg(RateAndUnit, ' + ') within group (order by treatment_name) as RatesInTAG, listagg(application_desc, ' + ') within group (order by treatment_name) as MAFInTAG from (select distinct m150_1b.trial_id, m150_1b.treatment_number, trt_application_code, treatment_name, cast(cast(application_rate as decimal(8, 4)) as nvarchar) || ' ' || application_rate_unit as RateAndUnit, application_desc from TrialList inner join public.mio150_trial_fact_cp m150_1b on TrialList.trial_id = m150_1b.trial_id where record_type = 'application_product'and product_type <> 'MTF') group by trial_id, treatment_number, trt_application_code) TagPrd left outer join (select trial_id, treatment_number, trt_application_code, listagg(application_date, ', ') within group (order by appl_application_code) as AppDates, listagg(distinct application_method, ' | ') within group (order by appl_application_code) as AppMethod, listagg(distinct application_placement, ' | ') within group (order by appl_application_code) as AppPlacement, listagg(distinct application_timing, ' | ') within group (order by appl_application_code) as AppTiming, listagg(distinct spray_volume, ' | ') within group (order by appl_application_code) as SprVol from (select distinct m150_1c.trial_id, treatment_number, trt_application_code, appl_application_code, application_date, application_method, application_placement, application_timing, case when spray_vol is not null then cast(cast(spray_vol as decimal(6, 1)) as nvarchar) || ' ' || spray_vol_unit end as spray_volume from TrialList inner join public.mio150_trial_fact_cp m150_1c on TrialList.trial_id = m150_1c.trial_id where record_type = 'application_product' and strpos(trt_application_code,appl_application_code) > 0) group by trial_id, treatment_number, trt_application_code) ApplInfo on TagPrd.trial_id = ApplInfo.trial_id and TagPrd.treatment_number = ApplInfo.treatment_number and TagPrd.trt_application_code = ApplInfo.trt_application_code group by TagPrd.trial_id, TagPrd.treatment_number) as Prdlist on m150_1.trial_id = Prdlist.trial_id and m150_1.treatment_number = Prdlist.treatment_number left outer join (select trial_id, treatment_number, listagg(factorial_factor || factorial_level, ', ') within group (order by factorial_factor, factorial_level) as FactorsAndLevels from (select distinct m150_1d.trial_id, treatment_number, factorial_factor, factorial_level from TrialList inner join public.mio150_trial_fact_cp m150_1d on TrialList.trial_id = m150_1d.trial_id where record_type = 'application_product') group by  trial_id, treatment_number)as Factorlist on m150_1.trial_id = Factorlist.trial_id and m150_1.treatment_number = Factorlist.treatment_number ) as Level_1 on TrialList.trial_id = Level_1.trial_id inner join (select distinct m150_2.trial_id, plot_number, treatment_no, repetition_number, plot_block_number, plot_col_number, listagg(distinct m150_2.crop_number, ', ') within group (order by m150_2.crop_number) as crop_numbers, listagg(distinct m150_2.crop_common_name, ', ') within group (order by m150_2.crop_number) as crop_common_names, listagg(distinct m150_2.variety_name, ', ') within group (order by m150_2.crop_number) as variety_names, listagg(distinct m150_2.plant_date, ', ') within group (order by m150_2.crop_number) as plant_dates, listagg(distinct m150_2.emerge_date , ', ') within group (order by m150_2.crop_number) as emerge_dates from TrialList inner join public.mio150_trial_fact_cp m150_2 on TrialList.trial_id = m150_2.trial_id where record_type = 'application_product'group by 1,2,3,4,5,6 ) as Level_2 on TrialList.trial_id = Level_2.trial_id and Level_1.treatment_number = Level_2.treatment_no left outer join (select UAV.trial_id, UAV.Assmt_Date, UAV.Assmt_Type, UAV.Plot_ID, UAV.Plot_Type, UAV.treatment_number, UAV.Assmt_Label, avg(UAV.data_output) as Rep_Value, listagg(case when strpos(text_output,'000') > strpos(text_output,'.') then left(text_output, strpos(text_output,'000')-1) else case when strpos(text_output,'999') > strpos(text_output,'.') then left(text_output, strpos(text_output,'999')-2) || cast(cast(right(left(text_output, strpos(text_output,'999')-1),1) as integer) + 1 as nvarchar) else text_output end end, ', ') within group (order by subplot_num) as sub_Values, listagg(UAV.subplot_num, ', ') within group (order by subplot_num) as sub_Nums, listagg(cast(UAV.uav_row as nvarchar) || '-' || cast(UAV.uav_col as nvarchar), ', ') within group (order by subplot_num) as sub_RowCol from TrialList inner join (select distinct trial_arm as trial_id, flight_date as Assmt_Date, metric_name as Assmt_Type, plot_num as Plot_ID, trt_chk_plottype as Plot_Type, treatment_num as treatment_number, case when company is not null then company  || ' ' else '' end || case when site_name is not null then site_name  ||' '  else '' end || case when flightblock_name is not null then flightblock_name  || ' '  else '' end || case when flight_date is not null then flight_date  || ' '  else '' end || case when flight_time is not null then flight_time  || ' '  else '' end || case when metric_name is not null then metric_name  || ' '  else '' end || case when generated_on is not null then ' generated on: ' || generated_on end as Assmt_Label, data_output, cast(data_output as nvarchar) as text_output, subplot_num, uav_raw."column" as uav_col, uav_raw."row" as uav_row from spectrum_schema.trial_drone_data uav_raw where uav_raw.data_output is not null and plot_num is not null) UAV on TrialList.trial_id = UAV.trial_id group by 1,2,3,4,5,6,7 ) as Level_3 on TrialList.trial_id = Level_3.trial_id and Level_2.plot_number = Level_3.plot_id order by Master_Prt, Derived_Prt, Trial, Level_3.Assmt_Date, Level_3.Assmt_label, Level_1.treatment_number, Level_2.repetition_number ;